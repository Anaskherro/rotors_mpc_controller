#!/usr/bin/env python

import rospy
from nav_msgs.msg import Path
from geometry_msgs.msg import PoseStamped
from nav_msgs.msg import Odometry

class PathPublisher:
    def __init__(self):
        self.path_pub = rospy.Publisher('/path', Path, queue_size=10, latch=True)
        self.path_msg = Path()
        self.path_msg.header.frame_id = "world"
        rospy.Subscriber('/hummingbird/ground_truth/odometry', Odometry, self.odom_callback)

    def odom_callback(self, msg):
        pose = PoseStamped()
        pose.header = msg.header
        pose.header.frame_id = "world"
        pose.pose = msg.pose.pose
        self.path_msg.header.stamp = rospy.Time.now()
        self.path_msg.poses.append(pose)
        try:
            self.path_pub.publish(self.path_msg)
        except rospy.ROSException as exc:
            rospy.logwarn_throttle(5.0, "Unable to publish path: %s", exc)

    def run(self):
        rospy.spin()

def main():
    rospy.init_node('path_publisher')
    path_publisher = PathPublisher()
    path_publisher.run()
if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass
